'use client'
import React, { useState } from 'react'
import Link from 'next/link'
import {
    DropdownMenu,
    DropdownMenuContent,
    DropdownMenuLabel,
    DropdownMenuRadioGroup,
    DropdownMenuRadioItem,
    DropdownMenuSeparator,
    DropdownMenuTrigger,
} from "@/shared/ui/dropdown-menu"
import { RippleButton } from '@/shared/ui/magicui/ripple-button'

const categories = [
    {
        label: '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
        items: [
            { icon: 'üñ•Ô∏è', title: '–í—ã–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã', desc: '–§–∏–∑–∏—á–µ—Å–∫–∏–µ —Å–µ—Ä–≤–µ—Ä—ã: –≥–æ—Ç–æ–≤—ã–µ –∏ –ø–æ–¥ –∑–∞–ø—Ä–æ—Å', href: '/dedicated' },
            { icon: '‚òÅÔ∏è', title: '–û–±–ª–∞—á–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã', desc: '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å –ø–æ—á–∞—Å–æ–≤—ã–º –±–∏–ª–ª–∏–Ω–≥–æ–º', href: '/cloud' },
            { icon: 'üóÑÔ∏è', title: '–ü—É–±–ª–∏—á–Ω–æ–µ –æ–±–ª–∞–∫–æ VMware', desc: '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –¶–û–î —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ vCloud Director', href: '/vmware' },
            { icon: 'üéÆ', title: '–°–µ—Ä–≤–µ—Ä—ã —Å GPU', desc: '–°–µ—Ä–≤–µ—Ä–∞ —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º–∏ —É—Å–∫–æ—Ä–∏—Ç–µ–ª—è–º–∏', href: '/gpu' },
            { icon: 'üì¶', title: 'VDS –∏ VPS –Ω–∞ Linux', desc: '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã —Å –≥–æ—Ç–æ–≤—ã–º–∏ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞–º–∏', href: '/vds-linux' },
            { icon: 'üêß', title: 'VDS –∏ VPS —Å Ubuntu', desc: '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã —Å Ubuntu', href: '/vds-ubuntu' },
        ],
    },
    {
        label: '–°–µ—Ç–∏',
        items: [
            { icon: 'üîí', title: 'VPN', desc: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞', href: '/vpn' },
            { icon: '‚öñÔ∏è', title: '–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∏', desc: '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏', href: '/balancer' },
        ],
    },
    {
        label: '–•—Ä–∞–Ω–µ–Ω–∏–µ –∏ –±—ç–∫–∞–ø—ã',
        items: [
            { icon: 'üíæ', title: '–û–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ', desc: '–ù–∞–¥—ë–∂–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö', href: '/storage' },
            { icon: 'üõ°Ô∏è', title: '–ë—ç–∫–∞–ø—ã', desc: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ', href: '/backup' },
        ],
    },
    { label: '–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö', items: [] },
    { label: '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã', items: [] },
]

const categories1 = [
    {
        label: '–ü–æ —Ç–∏–ø—É –∑–∞–¥–∞—á',
        items: [
            { icon: 'üñ•Ô∏è', title: '–°–µ—Ä–≤–µ—Ä—ã 152-–§–ó', desc: '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞–∫–æ–Ω–∞', href: '/' },
            { icon: '‚òÅÔ∏è', title: '–û–±–ª–∞–∫–æ 1–°', desc: '–û–±–ª–∞—á–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π 1–°', href: '/' },
            { icon: 'üóÑÔ∏è', title: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–æ—á—Ç–∞', desc: '–ü–æ—á—Ç–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –Ω–∞ –≤–∞—à–µ–º –¥–æ–º–µ–Ω–µ', href: '/' },
            { icon: 'üéÆ', title: 'DevOps as a Service', desc: '–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ DevOps-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞–º', href: '/' },
            { icon: 'üì¶', title: '–í—ã–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã 1–°', desc: '–ß–∞—Å—Ç–∏—á–Ω—ã–π –∏–ª–∏ –ø–æ–ª–Ω—ã–π –ø–µ—Ä–µ–Ω–æ—Å —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ –æ–±–ª–∞–∫–æ', href: '/' },
            { icon: 'üêß', title: '–ú–∏–≥—Ä–∞—Ü–∏—è –≤ –æ–±–ª–∞–∫–æ', desc: '–ù–∞–¥–µ–∂–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–π –ª—é–±–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∞', href: '/' },
        ],
    },
    {
        label: '–ü–æ –æ—Ç—Ä–∞—Å–ª—è–º',
        items: [
            { icon: 'üîí', title: '–†–∏—Ç–µ–π–ª', desc: '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ—Ñ–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω–æ–≤ –ª—é–±–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∞', href: '/' },
            { icon: '‚öñÔ∏è', title: '–§–∏–Ω–∞–Ω—Å—ã –∏ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ', desc: '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∏ —Å—Ç—Ä–∞—Ö–æ–≤—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π', href: '/' },
        ],
    },
    {
        label: '–•—Ä–∞–Ω–µ–Ω–∏–µ –∏ –±—ç–∫–∞–ø—ã',
        items: [
            { icon: 'üíæ', title: '–û–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ', desc: '–ù–∞–¥—ë–∂–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö', href: '/' },
            { icon: 'üõ°Ô∏è', title: '–ë—ç–∫–∞–ø—ã', desc: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ', href: '/' },
            { icon: 'üíæ', title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä—ã ', desc: '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –ò–¢-—É—Å–ª—É–≥', href: '/' },
            { icon: 'üíæ', title: 'E-Commerce', desc: '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤', href: '/' },
        ],
    },
    { label: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', items: [
        { icon: 'üõ°Ô∏è', title: '–ë–∞–∑–æ–≤–æ–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', desc: '–ë–∞–∑–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥', href: '/' },
        { icon: 'üõ°Ô∏è', title: '–õ–∏—Ü–µ–Ω–∑–∏–∏ Microsoft', desc: '–°–µ—Ä–≤–µ—Ä–Ω—ã–µ –ª–∏—Ü–µ–Ω–∑–∏–∏ –ü–û', href: '/' },
    ] },
]

export const Nav = () => {
    const [active, setActive] = useState(0)
    return (
        <nav className='flex xl:flex-row flex-col gap-6'>
            <DropdownMenu>
                <DropdownMenuTrigger asChild>
                    <RippleButton rippleColor="#ADD8E6" className="text-base py-2 px-4 h-auto 2xl:text-xl 2xl:py-4 2xl:px-8 font-semibold">–°–µ—Ä–≤–∏—Å—ã</RippleButton>
                </DropdownMenuTrigger>
                <DropdownMenuContent className="mt-2 w-[900px] h-[600px] p-0 rounded-2xl overflow-hidden shadow-2xl border bg-[#23243a] text-white z-50 flex" align="start">
                    <div className="flex flex-col w-1/3 min-w-[200px] bg-[#23243a] border-r border-[#35365a] py-4">
                        {categories.map((cat, i) => (
                            <button
                                key={cat.label}
                                className={`text-left px-6 py-3 font-semibold rounded-xl mb-1 transition ${active === i ? 'bg-[#292a4a] text-white' : 'text-gray-300 hover:bg-[#2d2e4a]'}`}
                                onMouseEnter={() => setActive(i)}
                                onFocus={() => setActive(i)}
                                type="button"
                            >
                                {cat.label}
                            </button>
                        ))}
                        <div className="mt-2 px-6">
                            <Link href="#" className="flex items-center gap-2 text-blue-400 hover:underline font-semibold py-2">
                                –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã <span>‚Üó</span>
                            </Link>
                        </div>
                    </div>
                    <div className="flex-1 grid grid-cols-2 gap-6 p-6 min-w-[420px] w-[420px]">
                        {categories[active].items.length === 0 ? (
                            <div className="col-span-2 text-gray-400">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</div>
                        ) : (
                            categories[active].items.map((item) => (
                                <Link
                                    key={item.title}
                                    href={item.href}
                                    className="flex items-center gap-4 p-4 rounded-xl hover:bg-[#28294a] transition"
                                >
                                    <span className="text-2xl">{item.icon}</span>
                                    <div>
                                        <div className="font-bold text-lg mb-1">{item.title}</div>
                                        <div className="text-gray-400 text-base">{item.desc}</div>
                                    </div>
                                </Link>
                            ))
                        )}
                    </div>
                </DropdownMenuContent>
            </DropdownMenu>

            <DropdownMenu>
                <DropdownMenuTrigger asChild>
                    <RippleButton rippleColor="#5b5cf0" className="text-base py-2 px-4 h-auto 2xl:text-xl 2xl:py-4 2xl:px-8 font-semibold">–†–µ—à–µ–Ω–∏—è</RippleButton>
                </DropdownMenuTrigger>
                <DropdownMenuContent className="mt-2 w-[900px] h-[600px] p-0 rounded-2xl overflow-hidden shadow-2xl border bg-[#23243a] text-white z-50 flex" align="start">
                    {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ ‚Äî –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
                    <div className="flex flex-col w-1/3 min-w-[200px] bg-[#23243a] border-r border-[#35365a] py-4">
                        {categories1.map((cat, i) => (
                            <button
                                key={cat.label}
                                className={`text-left px-6 py-3 font-semibold rounded-xl mb-1 transition ${active === i ? 'bg-[#292a4a] text-white' : 'text-gray-300 hover:bg-[#2d2e4a]'}`}
                                onMouseEnter={() => setActive(i)}
                                onFocus={() => setActive(i)}
                                type="button"
                            >
                                {cat.label}
                            </button>
                        ))}
                        <div className="mt-2 px-6">
                            <Link href="#" className="flex items-center gap-2 text-blue-400 hover:underline font-semibold py-2">
                                –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã <span>‚Üó</span>
                            </Link>
                        </div>
                    </div>
                    {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ ‚Äî —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
                    <div className="flex-1 grid grid-cols-2 gap-6 p-6 min-w-[420px] w-[420px]">
                        {categories1[active].items.length === 0 ? (
                            <div className="col-span-2 text-gray-400">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</div>
                        ) : (
                            categories1[active].items.map((item) => (
                                <Link
                                    key={item.title}
                                    href={item.href}
                                    className="flex items-center gap-4 p-4 rounded-xl hover:bg-[#28294a] transition"
                                >
                                    <span className="text-2xl">{item.icon}</span>
                                    <div>
                                        <div className="font-bold text-lg mb-1">{item.title}</div>
                                        <div className="text-gray-400 text-base">{item.desc}</div>
                                    </div>
                                </Link>
                            ))
                        )}
                    </div>
                </DropdownMenuContent>
            </DropdownMenu>

            <DropdownMenu>
                <DropdownMenuTrigger asChild>
                    <RippleButton rippleColor="#ADD8E6" className="text-base py-2 px-4 h-auto 2xl:text-xl 2xl:py-4 2xl:px-8">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</RippleButton>
                    {/* <Button variant="outline" className="text-base py-2 px-4 h-auto 2xl:text-xl 2xl:py-4 2xl:px-8">
                        –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
                    </Button> */}
                </DropdownMenuTrigger>
                <DropdownMenuContent className="w-56 2xl:w-[42rem] 2xl:text-xl 2xl:p-6" align="start">
                    <DropdownMenuLabel className="2xl:text-3xl 2xl:p-3">
                        –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
                    </DropdownMenuLabel>
                    <DropdownMenuSeparator className="2xl:my-3" />
                    <DropdownMenuRadioGroup className="2xl:space-y-3">
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                    </DropdownMenuRadioGroup>
                </DropdownMenuContent>
            </DropdownMenu>

            <DropdownMenu>
                <DropdownMenuTrigger asChild>
                    <RippleButton rippleColor="#ADD8E6" className="text-base py-2 px-4 h-auto 2xl:text-xl 2xl:py-4 2xl:px-8">–ë–ª–æ–≥–∏</RippleButton>
                    {/* <Button variant="outline" className="text-base py-2 px-4 h-auto 2xl:text-xl 2xl:py-4 2xl:px-8">
                        –ë–ª–æ–≥–∏
                    </Button> */}
                </DropdownMenuTrigger>
                <DropdownMenuContent className="w-56 2xl:w-[42rem] 2xl:text-xl 2xl:p-6" align="start">
                    <DropdownMenuLabel className="2xl:text-3xl 2xl:p-3">
                        –ë–ª–æ–≥–∏
                    </DropdownMenuLabel>
                    <DropdownMenuSeparator className="2xl:my-3" />
                    <DropdownMenuRadioGroup className="2xl:space-y-3">
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                    </DropdownMenuRadioGroup>
                </DropdownMenuContent>
            </DropdownMenu>

            <DropdownMenu>
                <DropdownMenuTrigger asChild>
                    <RippleButton rippleColor="#ADD8E6" className="text-base py-2 px-4 h-auto 2xl:text-xl 2xl:py-4 2xl:px-8">Roadmap</RippleButton>
                </DropdownMenuTrigger>
                <DropdownMenuContent className="w-56 2xl:w-[42rem] 2xl:text-xl 2xl:p-6" align="start">
                    <DropdownMenuLabel className="2xl:text-3xl 2xl:p-3">
                        Roadmap
                    </DropdownMenuLabel>
                    <DropdownMenuSeparator className="2xl:my-3" />
                    <DropdownMenuRadioGroup className="2xl:space-y-3">
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                    </DropdownMenuRadioGroup>
                </DropdownMenuContent>
            </DropdownMenu>

            <DropdownMenu>
                <DropdownMenuTrigger asChild>
                    <RippleButton rippleColor="#ADD8E6" className="text-base py-2 px-4 h-auto 2xl:text-xl 2xl:py-4 2xl:px-8">–ö–æ–Ω—Ç–∞–∫—Ç—ã</RippleButton>
                    {/* <Button variant="outline" className="text-base py-2 px-4 h-auto 2xl:text-xl 2xl:py-4 2xl:px-8">
                        –ö–æ–Ω—Ç–∞–∫—Ç—ã
                    </Button> */}
                </DropdownMenuTrigger>
                <DropdownMenuContent className="w-56 2xl:w-[42rem] 2xl:text-xl 2xl:p-6" align="start">
                    <DropdownMenuLabel className="2xl:text-3xl 2xl:p-3">
                        –ö–æ–Ω—Ç–∞–∫—Ç—ã
                    </DropdownMenuLabel>
                    <DropdownMenuSeparator className="2xl:my-3" />
                    <DropdownMenuRadioGroup className="2xl:space-y-3">
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                        <DropdownMenuRadioItem value="center" className="2xl:text-2xl 2xl:py-4 2xl:px-3">
                            <Link href='/' className="block w-full">Top</Link>
                        </DropdownMenuRadioItem>
                    </DropdownMenuRadioGroup>
                </DropdownMenuContent>
            </DropdownMenu>
        </nav>
    )
}